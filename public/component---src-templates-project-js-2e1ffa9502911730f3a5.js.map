{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["pageQuery","Project","pageContext","data","title","dir","subdir","timeframe","dangerouslySetInnerHTML","__html","longDescription","linkTo","href","style","textDecoration","className","replace","images","cardTitle","projectsJson","map","image","fluid","source","childImageSharp","alt","caption","fontSize","sources","i","borderWidth","borderStyle","borderColor","marginTop","height","display","flexDirection","justifyContent","flex","sourceTitle","sourceLink","target","rel","sourceDescription"],"mappings":"oPA0FaA,EAAS,YAwBPC,UA1GC,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAhB,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAK,cAAgBF,EAAYE,QACtC,kBAAC,IAAD,CAAKC,IAAI,WAAWC,OAAQJ,EAAYE,QACxC,kBAAC,IAAD,KACE,6BACE,qCACA,4BAAKF,EAAYE,OACjB,yCACA,4BAAKF,EAAYK,WACjB,2CACA,uBAAGC,wBAAyB,CAAEC,OAAQP,EAAYQ,qBAGrDR,EAAYS,OACX,oCACA,uBAAGC,KAAMV,EAAYS,OAAQE,MAAO,CAAEC,eAAe,SACnD,yBAAKC,UAAU,eACT,sCAAYb,EAAYS,OAAOK,QAAQ,iBAAkB,IAAzD,SAJT,GAWAd,EAAYe,OACX,kBAAC,IAAD,CAAMC,UAAU,UACd,6BAEEf,EAAKgB,aAAaF,OAAOG,KAAI,SAAAC,GAAK,OAChC,oCACA,yBAAKN,UAAU,sBACb,kBAAC,IAAD,CACEO,MAAOD,EAAME,OAAOC,gBAAgBF,MACpCG,IAAI,KACLJ,EAAMK,QACL,yCACI,uBAAGb,MAAO,CAAEc,SAAS,UAAcnB,wBAAyB,CAAEC,OAAQY,EAAMK,YAFjF,UAVV,GAyBAxB,EAAY0B,QACX,kBAAC,IAAD,CAAMV,UAAU,WACbf,EAAKgB,aAAaS,QAAQR,KAAI,SAACG,EAAQM,GAAT,OAC7B,oCACE,6BACO,IAAJA,EAAA,GAAa,wBAAIhB,MAAO,CAAEiB,YAAY,kBAAoBC,YAAY,QAAUC,YAAY,OAASC,UAAU,OAASC,OAAO,OAChI,yBAAKrB,MAAO,CAAEsB,QAAQ,OAASC,cAAc,MAAQC,eAAe,kBAClE,yBAAKxB,MAAO,CAAEyB,KAAK,MACjB,wBAAI9B,wBAAyB,CAAEC,OAAOc,EAAOgB,gBAE9ChB,EAAOiB,WACR,oCACE,yBAAK3B,MAAO,CAAEyB,KAAK,OACnB,yBAAKzB,MAAO,CAAEyB,KAAK,MACjB,uBAAG1B,KAAMW,EAAOiB,WAAYC,OAAO,SAASC,IAAI,uBAAhD,QADF,OAHD,IAWFnB,EAAOoB,kBAAoB,2BAAIpB,EAAOoB,mBAAtC,SArBV","file":"component---src-templates-project-js-2e1ffa9502911730f3a5.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport Card from \"../components/card\"\nimport Nav from \"../components/nav\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Project = ({ pageContext, data }) => (\n  <Layout>\n    <SEO title={`projects / ${pageContext.title}`} />\n    <Nav dir=\"projects\" subdir={pageContext.title} />\n    <Card>\n      <div>\n        <h4>title</h4>\n        <h2>{pageContext.title}</h2>\n        <h4>timeframe</h4>\n        <h3>{pageContext.timeframe}</h3>\n        <h4>description</h4>\n        <p dangerouslySetInnerHTML={{ __html: pageContext.longDescription }} />\n      </div>\n    </Card>\n    {pageContext.linkTo ?\n      <>\n      <a href={pageContext.linkTo} style={{ textDecoration: `none`, }}>\n        <div className=\"linkTo-link\">\n              <b>link to {pageContext.linkTo.replace(/[^-A-Z0-9.]+/ig, \"\")}&nbsp;→</b>\n        </div>\n      </a>\n      </>\n      :\n      ``\n    }\n    {pageContext.images ?\n      <Card cardTitle=\"images\">\n        <div>\n          {\n          data.projectsJson.images.map(image => (\n            <>\n            <div className=\"project-page-photo\">\n              <Img \n                fluid={image.source.childImageSharp.fluid}\n                alt=\"\" />\n              {image.caption ? \n                <>\n                  ↪ <i style={{ fontSize: `.75rem`, }} dangerouslySetInnerHTML={{ __html: image.caption }} />\n                </>\n                :\n                ``\n              }\n            </div>\n            </>\n          ))}\n        </div>\n      </Card>\n      :\n      ``\n    }\n    {pageContext.sources ?\n      <Card cardTitle=\"sources\">\n        {data.projectsJson.sources.map((source, i) => (\n          <>\n            <div>\n              {i===0 ? `` : <hr style={{ borderWidth: `1px 0px 0px 0px`, borderStyle: `solid`, borderColor: `blue`, marginTop: `1rem`, height: `0` }} />}\n              <div style={{ display: `flex`, flexDirection: `row`, justifyContent: `space-between` }}>\n                <div style={{ flex: `4` }}>\n                  <h3 dangerouslySetInnerHTML={{ __html:source.sourceTitle }} />\n                </div>\n                {source.sourceLink ? \n                <>\n                  <div style={{ flex: `1` }} />\n                  <div style={{ flex: `0` }}>\n                    <a href={source.sourceLink} target=\"_blank\" rel=\"noopener noreferrer\">link</a>&nbsp;↗\n                  </div>\n                </>\n                :\n                ``\n                }\n              </div>\n              {source.sourceDescription ? <p>{source.sourceDescription}</p> : ``}\n            </div>\n          </>\n        ))}\n      </Card>\n      :\n      ``\n    }\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n  query ProjectsPageQuery($slug: String!) {\n    projectsJson(slug: {eq: $slug}) {\n      slug\n      images {\n        source {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n              }\n            }\n          }\n      caption\n      name\n      }\n      sources {\n        sourceDescription\n        sourceLink\n        sourceTitle\n      }\n    }\n  }\n`\n\nexport default Project"],"sourceRoot":""}